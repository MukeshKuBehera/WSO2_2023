<data transports="http https" serviceGroup="" serviceNamespace="" name="MySQL_DSS">
  <description>Exposing the data service as a REST service.</description>
  <config enableOData="true" id="test">
    <property name="driverClassName">com.mysql.cj.jdbc.Driver</property>
    <property name="url">jdbc:mysql://localhost:3306/test</property>
    <property name="username">root</property>
    <property name="password">root</property>
  </config>
  <resource method="POST" path="/insert">
    <description />
    <call-query href="InsertStudent">
      <with-param name="name" query-param="name" />
      <with-param name="school" query-param="school" />
      <with-param name="grade" query-param="grade" />
    </call-query>
  </resource>
  <resource method="PUT" path="/update">
    <description />
    <call-query href="UpdateStudent">
      <with-param name="id" query-param="id" />
      <with-param name="name" query-param="name" />
      <with-param name="school" query-param="school" />
      <with-param name="grade" query-param="grade" />
    </call-query>
  </resource>
  <resource method="DELETE" path="/delete">
    <description />
    <call-query href="DeleteStudent">
      <with-param name="id" query-param="id" />
    </call-query>
  </resource>
  <resource method="POST" path="/select">
    <description />
    <call-query href="GetStudent">
      <with-param name="id" query-param="id" />
    </call-query>
  </resource>
  <resource method="GET" path="/allStudents">
    <description />
    <call-query href="ReadStudents" />
  </resource>
  <query id="InsertStudent" useConfig="test" returnGeneratedKeys="true" keyColumns="ID">
    <sql>INSERT INTO students (name, school, grade) VALUES (:name, :school, :grade)
		</sql>
    <param name="name" sqlType="STRING" paramType="SCALAR" />
    <param name="school" sqlType="STRING" paramType="SCALAR" />
    <param name="grade" sqlType="STRING" paramType="SCALAR" />
    <result rowName="Student" element="GeneratedKey" useColumnNumbers="true">
      <element name="id" xsdType="integer" column="1" />
    </result>
  </query>
  <query id="UpdateStudent" useConfig="test" returnGeneratedKeys="true" keyColumns="ID">
    <sql>UPDATE students SET name = :name, school = :school, grade = :grade WHERE id = :id</sql>
    <param name="name" sqlType="STRING" paramType="SCALAR" />
    <param name="school" sqlType="STRING" paramType="SCALAR" />
    <param name="grade" sqlType="STRING" paramType="SCALAR" />
    <param name="id" sqlType="INTEGER" paramType="SCALAR" />
    <result rowName="Student" element="GeneratedKey" useColumnNumbers="true">
      <element name="id" xsdType="integer" column="1" />
    </result>
  </query>
  <query id="DeleteStudent" useConfig="test" returnGeneratedKeys="true">
    <sql>DELETE FROM students WHERE id = :id
		</sql>
    <param name="id" sqlType="INTEGER" paramType="SCALAR" />
  </query>
  <query id="GetStudent" useConfig="test">
    <sql>SELECT id, name, school ,grade FROM students WHERE id=:id</sql>
    <param name="id" sqlType="INTEGER" paramType="SCALAR" />
    <result rowName="Student" element="generatedKey">
      <element name="id" xsdType="integer" column="id" />
      <element name="name" xsdType="string" column="name" />
      <element name="school" xsdType="string" column="school" />
      <element name="grade" xsdType="string" column="grade" />
    </result>
  </query>
  <query id="ReadStudents" useConfig="test">
    <sql>SELECT id, name, school, grade FROM students</sql>
    <result outputType="json">                    {               "students":{                  "student":[                     {                       "id":"$id", "name":"$name",                        "school":"$school",                        "grade":"$grade"                     }                  ]               }            }      </result>
  </query>
</data>
